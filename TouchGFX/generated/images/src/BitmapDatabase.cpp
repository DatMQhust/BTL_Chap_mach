// 4.25.0 0xf44e37a7
// Generated by imageconverter. Please, do not edit!

#include <images/BitmapDatabase.hpp>
#include <touchgfx/Bitmap.hpp>

extern const unsigned char image_alternate_theme_images_widgets_button_regular_height_50_tiny_round_action[]; // BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUND_ACTION_ID = 0, Size: 110x50 pixels
extern const unsigned char image_alternate_theme_images_widgets_button_regular_height_50_tiny_round_pressed[]; // BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUND_PRESSED_ID = 1, Size: 110x50 pixels
extern const unsigned char image_cannon[]; // BITMAP_CANNON_ID = 2, Size: 320x448 pixels
extern const unsigned char image_egg_blue[]; // BITMAP_EGG_BLUE_ID = 3, Size: 32x32 pixels
extern const unsigned char image_egg_green[]; // BITMAP_EGG_GREEN_ID = 4, Size: 32x32 pixels
extern const unsigned char image_egg_purple[]; // BITMAP_EGG_PURPLE_ID = 5, Size: 32x32 pixels
extern const unsigned char image_egg_red[]; // BITMAP_EGG_RED_ID = 6, Size: 32x32 pixels
extern const unsigned char image_egg_yellow[]; // BITMAP_EGG_YELLOW_ID = 7, Size: 32x32 pixels
extern const unsigned char image_pause_button[]; // BITMAP_PAUSE_BUTTON_ID = 8, Size: 400x400 pixels
extern const unsigned char image_screen1[]; // BITMAP_SCREEN1_ID = 9, Size: 192x192 pixels

const touchgfx::Bitmap::BitmapData bitmap_database[] = {
    { image_alternate_theme_images_widgets_button_regular_height_50_tiny_round_action, 0, 110, 50, 13, 3, 84, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 44, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_alternate_theme_images_widgets_button_regular_height_50_tiny_round_pressed, 0, 110, 50, 13, 3, 84, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 44, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_cannon, 0, 320, 448, 78, 5, 165, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 387, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_egg_blue, 0, 32, 32, 5, 5, 22, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 22, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_egg_green, 0, 32, 32, 5, 5, 22, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 22, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_egg_purple, 0, 32, 32, 5, 5, 22, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 22, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_egg_red, 0, 32, 32, 5, 5, 22, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 22, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_egg_yellow, 0, 32, 32, 5, 5, 22, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 22, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_pause_button, 0, 400, 400, 0, 0, 400, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 400, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_screen1, 0, 192, 192, 0, 0, 192, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 192, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
} // namespace BitmapDatabase
